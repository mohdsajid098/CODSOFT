# -*- coding: utf-8 -*-
"""Untitled24.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wA3xknyYjFWQkPuiO3Nuo-Hrzz2MCoYL
"""

import json

def load_contacts():
    """Loads contacts from a JSON file."""
    try:
        with open("contacts.json", "r") as f:
            return json.load(f)
    except FileNotFoundError:
        return []

def save_contacts(contacts):
    """Saves contacts to a JSON file."""
    with open("contacts.json", "w") as f:
        json.dump(contacts, f, indent=4)

def add_contact(contacts):
    """Adds a new contact to the contact list."""
    name = input("Enter name: ")
    phone = input("Enter phone number: ")
    email = input("Enter email address: ")
    address = input("Enter address: ")
    contact = {"name": name, "phone": phone, "email": email, "address": address}
    contacts.append(contact)
    print("Contact added successfully!")

def view_contacts(contacts):
    """Displays a list of all contacts."""
    if not contacts:
        print("No contacts found.")
    else:
        print("Contact List:")
        for i, contact in enumerate(contacts, 1):
            print(f"{i}. {contact['name']} ({contact['phone']})")

def search_contact(contacts, query):
    """Searches for contacts by name or phone number."""
    results = []
    for contact in contacts:
        if query.lower() in contact["name"].lower() or query in contact["phone"]:
            results.append(contact)
    return results

def update_contact(contacts, index):
    """Updates an existing contact."""
    contact = contacts[index]
    name = input("Enter new name (leave blank to keep current): ")
    phone = input("Enter new phone number (leave blank to keep current): ")
    email = input("Enter new email address (leave blank to keep current): ")
    address = input("Enter new address (leave blank to keep current): ")
    if name:
        contact["name"] = name
    if phone:
        contact["phone"] = phone
    if email:
        contact["email"] = email
    if address:
        contact["address"] = address
    print("Contact updated successfully!")

def delete_contact(contacts, index):
    """Deletes a contact from the list."""
    del contacts[index]
    print("Contact deleted successfully!")

def main():
    contacts = load_contacts()

    while True:
        print("\nContact Book")
        print("1. Add Contact")
        print("2. View Contacts")
        print("3. Search Contact")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Quit")
        choice = input("Enter your choice (1-6): ")

        if choice == "1":
            add_contact(contacts)
        elif choice == "2":
            view_contacts(contacts)
        elif choice == "3":
            query = input("Enter name or phone number to search: ")
            results = search_contact(contacts, query)
            if results:
                for i, contact in enumerate(results, 1):
                    print(f"{i}. {contact['name']} ({contact['phone']})")
                index = int(input("Enter the index of the contact to view (or 0 to cancel): ")) - 1
                if index >= 0 and index < len(results):
                    print(results[index])
            else:
                print("No contacts found.")
        elif choice == "4":
            query = input("Enter name or phone number to update: ")
            results = search_contact(contacts, query)
            if results:
                for i, contact in enumerate(results, 1):
                    print(f"{i}. {contact['name']} ({contact['phone']})")
                index = int(input("Enter the index of the contact to update (or 0 to cancel): ")) - 1
                if index >= 0 and index < len(results):
                    update_contact(contacts, index)
            else:
                print("No contacts found.")
        elif choice == "5":
            query = input("Enter name or phone number to delete: ")
            results = search_contact(contacts, query)
            if results:
                for i, contact in enumerate(results, 1):
                    print(f"{i}. {contact['name']} ({contact['phone']})")
                index = int(input("Enter the index of the contact to delete (or 0 to cancel): ")) - 1
                if index >= 0 and index < len(results):
                    delete_contact(contacts, index)
            else:
                print("No contacts found.")
        elif choice == "6":
            save_contacts(contacts)
            print("Exiting...")
            break
        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()